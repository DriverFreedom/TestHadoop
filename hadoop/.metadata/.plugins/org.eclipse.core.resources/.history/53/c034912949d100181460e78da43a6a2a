package cn.pig;

import java.io.File;
import java.io.IOException;
import java.util.Comparator;
import java.util.TreeSet;

import org.apache.commons.io.FileUtils;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.Reducer.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.htrace.fasterxml.jackson.databind.ObjectMapper;



public class AccessMP {

	public static class MapTask extends Mapper<LongWritable, Text, Text,MovieBean>{
		@Override
		protected void map(LongWritable key, Text value, Mapper<LongWritable, Text,  Text,MovieBean>.Context context)
				throws IOException, InterruptedException {
			
		}
	}
	
	public static class RedeceTask extends Reducer<Text,MovieBean, Text, IntWritable>{
		
		
		
		
		@Override
		protected void reduce(Text key, Iterable<MovieBean> value,
				Reducer<Text, MovieBean, Text, IntWritable>.Context context)
				throws IOException, InterruptedException {
			
			}
		}
		
	
		
			
	}
	
	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		Job job = Job.getInstance(conf);
		
		job.setMapperClass(MapTask.class);
		job.setReducerClass(RedeceTask.class);
		job.setJarByClass(HotMovie.class);
		
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(MovieBean.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		
		FileInputFormat.setInputPaths(job, new Path("D:\\data\\access_2013_05_30.log"));
		FileOutputFormat.setOutputPath(job, new Path("d:\\data\\out\\access\\test"));
		File file = new File("d:\\data\\out\\access\\test");
		if(file.exists()){
			FileUtils.deleteDirectory(file);
		}
		
		boolean b = job.waitForCompletion(true);
		System.out.println(b?"恭喜你答对了！":"不要放弃，希望就在明天");
	}
	
}
